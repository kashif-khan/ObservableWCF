//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceLibrary.ServiceRegistryReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRegistryReference.IServiceRegistry", CallbackContract=typeof(WcfServiceLibrary.ServiceRegistryReference.IServiceRegistryCallback))]
    public interface IServiceRegistry {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegistry/Online", ReplyAction="http://tempuri.org/IServiceRegistry/OnlineResponse")]
        bool Online(string Url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegistry/Online", ReplyAction="http://tempuri.org/IServiceRegistry/OnlineResponse")]
        System.Threading.Tasks.Task<bool> OnlineAsync(string Url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegistry/GetServersList", ReplyAction="http://tempuri.org/IServiceRegistry/GetServersListResponse")]
        string[] GetServersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegistry/GetServersList", ReplyAction="http://tempuri.org/IServiceRegistry/GetServersListResponse")]
        System.Threading.Tasks.Task<string[]> GetServersListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceRegistryCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRegistry/Ping", ReplyAction="http://tempuri.org/IServiceRegistry/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRegistry/NewServiceAdded")]
        void NewServiceAdded(string Url);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRegistry/ServiceRemoved")]
        void ServiceRemoved(string Url);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceRegistryChannel : WcfServiceLibrary.ServiceRegistryReference.IServiceRegistry, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceRegistryClient : System.ServiceModel.DuplexClientBase<WcfServiceLibrary.ServiceRegistryReference.IServiceRegistry>, WcfServiceLibrary.ServiceRegistryReference.IServiceRegistry {
        
        public ServiceRegistryClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceRegistryClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceRegistryClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRegistryClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRegistryClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Online(string Url) {
            return base.Channel.Online(Url);
        }
        
        public System.Threading.Tasks.Task<bool> OnlineAsync(string Url) {
            return base.Channel.OnlineAsync(Url);
        }
        
        public string[] GetServersList() {
            return base.Channel.GetServersList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetServersListAsync() {
            return base.Channel.GetServersListAsync();
        }
    }
}
